diff --git a/Etape6/pay.c b/Etape6/pay.c
index 67bfe5a..ae717f2 100644
--- a/Etape6/pay.c
+++ b/Etape6/pay.c
@@ -20,6 +20,7 @@ int   RecoverFichierTransactionBDEF(char*);
 void  HandlerSigAlarm(int);
 float CalculCoutBDEF(int, int);
 int   TimeToMinutesBDEF(int);
+int   PaiementTicketLocalBDEF(char*, int, int, int, int, int);
 
 
 int Desc;
@@ -177,9 +178,7 @@ int RequetePaiementBDEF(char *Fichier, int NumTicket, int Heure) {
     alarm(0);
     fprintf(stderr, "bytes:%d:%d\n", rc, req.NumeroTicket);
     if (req.NumeroTicket > 0) {
-        // Ceci ne marche pas vu que la fonction cherche pour une transaction de type RESERVATION
-        // et qu'il n'y en a pas dans ce fichier si...
-        PaiementTicketBDEF(Fichier, GetIP(&psoo), GetPort(&psoo), NumTransac, req.Heure, req.NumeroTicket);
+        PaiementTicketLocalBDEF(Fichier, GetIP(&psoo), GetPort(&psoo), NumTransac, req.Heure, req.NumeroTicket);
         ++NumTransac;
     }
     return req.NumeroTicket;
@@ -221,3 +220,25 @@ int TimeToMinutesBDEF(int t) {
     int minutes = t - hours * 100;
     return hours * 60 + minutes;
 }
+
+
+int PaiementTicketLocalBDEF(char *Nom, int IP, int Port, int NumTransac, int Heure, int NumTicket) {
+    FILE *fp;
+    fp = fopen(Nom, "a");
+    if(fp == NULL) {
+        perror("Erreur d'ouverture de fichier");
+        return -1;
+    }
+    // Paiement
+    struct Transaction  UneTransaction;
+    UneTransaction.IP = IP;
+    UneTransaction.Port = Port;
+    UneTransaction.NumTransac = NumTransac;
+    UneTransaction.Heure = Heure;
+    UneTransaction.PlacesLibres = 0;
+    UneTransaction.UneAction = PAIEMENT;
+    UneTransaction.NumTicket = NumTicket;
+    fwrite(&UneTransaction, sizeof(struct Transaction), 1, fp);
+    fclose(fp);
+    return 0;
+}
diff --git a/Parking/parking.c b/Parking/parking.c
index aa0c03c..7ca70ac 100644
--- a/Parking/parking.c
+++ b/Parking/parking.c
@@ -146,7 +146,7 @@ int PaiementTicketBDEF(char *Nom, int IP, int Port, int NumTransac, int Heure, i
 
     // En cas d'erreur lors de la recherche
     if(offset < 1) {
-        return offset; // TODO FIXME plz
+        return offset;
     }
 
     // Si tout est trop cool
@@ -271,7 +271,6 @@ int existsTransactionBDEF(char *nomFichier, int ip, int port, int numTransac, en
     fseek(fp, -sizeof(struct Transaction), SEEK_END);
     while(ftell(fp) > sizeof(struct Transaction)) {
         fread(&transac, sizeof(struct Transaction), 1, fp);
-        printf("oy---\n");
         if(transac.IP == ip && transac.Port == port && transac.UneAction == type) {
             if(transac.NumTransac == numTransac) {
                 return transac.NumTicket;
